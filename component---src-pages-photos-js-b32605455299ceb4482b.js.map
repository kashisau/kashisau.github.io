{"version":3,"sources":["webpack:///./src/components/PhotoThumb/index.js","webpack:///./src/components/PhotoThumb/PhotoThumb.js","webpack:///./src/layouts/PhotosIndexLayout/index.js","webpack:///./src/layouts/PhotosIndexLayout/PhotosIndexLayout.js","webpack:///./src/services/PhotoExif/PhotoExif.js","webpack:///./src/services/PhotoExif/index.js","webpack:///./src/pages/photos.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Seo/index.js","webpack:///./src/components/Header/Header.js","webpack:///./src/components/Header/index.js"],"names":["PhotoThumb","_ref","prethumb","title","slug","react_default","a","createElement","gatsby_browser_entry","to","src","alt","PhotosIndexLayout","render","this","props","children","React","Component","_callee","jpegUrl","regenerator_default","wrap","_context","prev","next","abrupt","fetchImageHeaderFromUrl","then","getRawExif","stop","_callee2","requestSettings","_context2","redirect","cache","headers","Content-Type","Range","fetch","res","buffer","arrayBuffer","_callee3","imagePartialArrayBuffer","_context3","Promise","resolve","reject","ExifParser","create","parse","error","PhotoExif","getExifFromUrl","PhotosPage","_this","_React$Component","call","state","photos","data","allPrismicPhoto","edges","reduce","edge","photoData","node","url","photo_file","responsiveImages","slugs","exifResolved","photo","description","photo_description","exif","Prethumb","push","photoThumbs","map","i","components_PhotoThumb","Object","assign","key","layouts_PhotosIndexLayout","Seo","Header","siteTitle","subtitle","className","query","__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","createContext","Consumer","staticQueryData","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","siteMetadata","author","keywords","siteMetadataObj","allPrismicSiteMetadata","titleObj","site_name","descriptionObj","site_description","keywordsObj","authorObj","text","siteDescription","siteKeywords","siteAuthor","titleTag","descriptionTag","authorTag","keywordsTag","Helmet_default","htmlAttributes","lang","meta","name","content","property","concat","length","join","Seo_Seo","_369661623","defaultProps"],"mappings":"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","file":"component---src-pages-photos-js-b32605455299ceb4482b.js","sourcesContent":["import PhotoThumb from './PhotoThumb';\n\nexport default PhotoThumb;","import React from 'react'\nimport { Link } from 'gatsby'\n\nconst PhotoThumb = ({prethumb, title, slug}) => {\n  return (\n    <Link to={`/${slug}`}><img src={prethumb} alt={title} /></Link>\n  )\n}\n\nexport default PhotoThumb\n","import PhotosIndexLayout from './PhotosIndexLayout';\n\nexport default PhotosIndexLayout;","import React from 'react'\n\nimport './photos-index-layout.css'\n\nclass PhotosIndexLayout extends React.Component {\n  render() {\n    const { children } = this.props;\n    return children\n  }\n}\n\nexport default PhotosIndexLayout\n","/**\n * Photo EXIF service\n *\n * Takes a JPEG image with EXIF data and returns all the relevant\n * information.\n */\nimport ExifParser from 'exif-parser'\nimport fetch from 'node-fetch'\n\nasync function getExifFromUrl(jpegUrl) {\n  return fetchImageHeaderFromUrl(jpegUrl)\n    .then(getRawExif);\n}\n\nasync function fetchImageHeaderFromUrl(jpegUrl) {\n  const requestSettings = {\n    redirect: \"follow\",\n    cache: \"no-cache\",\n    headers: {\n      \"Content-Type\": \"image/jpeg\",\n      \"Range\": \"bytes=0-65536\"\n    }\n  }\n  return fetch(jpegUrl, requestSettings)\n    .then(res => {\n      const buffer = ('buffer' in res)? res.buffer() : res.arrayBuffer();\n      return buffer;\n    });\n}\n\nasync function getRawExif(imagePartialArrayBuffer) {\n  return new Promise((resolve, reject) => {\n    try {\n      const imagePartial = ExifParser.create(imagePartialArrayBuffer);\n      const imageExif = imagePartial.parse();\n      resolve(imageExif);\n    } catch (error) {\n      reject(error);\n    }\n  })\n}\n\nconst PhotoExif = {\n  getExifFromUrl\n}\n\nexport default PhotoExif","import PhotoExif from './PhotoExif';\n\nexport default PhotoExif;","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Header from '../components/Header'\nimport Seo from '../components/Seo'\nimport PhotoThumb from '../components/PhotoThumb'\nimport PhotosIndexLayout from '../layouts/PhotosIndexLayout'\nimport PhotoExif from '../services/PhotoExif'\n\nconst { getExifFromUrl } = PhotoExif;\n\nclass PhotosPage extends React.Component {\n  state = {\n    photos: []\n  }\n\n  constructor(props) {\n    super(props);\n    this.state.photos = props.data.allPrismicPhoto.edges.reduce((photos, edge) => {\n      const photoData = edge.node.data;\n      const url = photoData.photo_file.url\n      const responsiveImages = photoData.photo_file\n      const slug = edge.node.slugs[0];\n      const exifResolved = getExifFromUrl(url);\n\n      const photo = {\n        title: photoData.title,\n        description: photoData.photo_description,\n        url: url,\n        responsiveImages: responsiveImages,\n        slug: slug,\n        exif: exifResolved,\n        prethumb: photoData.photo_file.Prethumb.url\n      };\n\n      photos.push(photo);\n      return photos;\n    }, []);\n  }\n\n  render() {\n    const { photos } = this.state\n    const photoThumbs = photos.map((photo, i) => <PhotoThumb key={i} {...photo} />);\n\n    return (<PhotosIndexLayout>\n      <Seo title=\"Photos\" description=\"A collection of photos by Kashi Samaraweera\" />\n      <Header siteTitle=\"Photos\" subtitle=\"shutterbug\" />\n      <section className=\"MainBody\">\n        {photoThumbs}\n      </section>\n    </PhotosIndexLayout>)\n  }\n}\n\nexport const query = graphql`\nquery SitePhotoListQuery {\n  allPrismicPhoto {\n    edges {\n      node {\n        id\n        slugs\n        data {\n          title {\n            text\n          }\n          photo_description {\n            html\n          }\n          photo_file {\n            Prethumb {\n              url\n            }\n            Desktop {\n              url\n            }\n            Phone {\n              url\n            }\n            Thumb {\n              url\n            }\n            Tablet {\n              url\n            }\n            url\n          }\n          instagram {\n            url\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport default PhotosPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nconst Seo = ({ siteMetadata, title, description, author, keywords }) => {\n  const siteMetadataObj = siteMetadata.allPrismicSiteMetadata.edges[\"0\"].node.data;\n  const { site_name: titleObj, site_description: descriptionObj, keywords: keywordsObj, author: authorObj } = siteMetadataObj;\n\n  const siteTitle = titleObj.text;\n  const siteDescription = descriptionObj.text;\n  const siteKeywords = keywordsObj;\n  const siteAuthor = authorObj.text;\n\n  const titleTag = title || siteTitle;\n  const descriptionTag = description || siteDescription;\n  const authorTag = author || siteAuthor;\n  const keywordsTag = keywords || siteKeywords;\n\n  const lang = \"en-AU\";\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={titleTag}\n      meta={[\n        {\n          name: 'description',\n          content: descriptionTag,\n        },\n        {\n          property: 'og:title',\n          content: titleTag,\n        },\n        {\n          property: 'og:description',\n          content: descriptionTag,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: authorTag,\n        },\n        {\n          name: 'twitter:title',\n          content: titleTag,\n        },\n        {\n          name: 'twitter:description',\n          content: descriptionTag,\n        },\n      ]\n        .concat(\n          keywordsTag.length > 0\n            ? {\n                name: 'keywords',\n                content: keywordsTag.join(', '),\n              }\n            : []\n        )}\n    />\n  )\n}\n\nconst query = graphql`\nquery SiteMetatdataQuery {\n  allPrismicSiteMetadata {\n    edges {\n      node {\n        data {\n          site_name {\n            text\n          }\n          site_description {\n            text\n          }\n          keywords {\n            text\n          }\n          author {\n            text\n          }\n        }\n      }\n    }\n  }\n}\n`\n\nexport default props => (\n  <StaticQuery\n    query={query}\n    render={siteMetadata => <Seo siteMetadata={siteMetadata} {...props} />}\n  />\n)\n\n","import Seo from './Seo';\n\nexport default Seo;","import PropTypes from 'prop-types'\nimport React from 'react'\n\nimport './header.css'\n\nconst Header = ({ siteTitle, subtitle }) => (\n  <header className=\"Header\">\n    <h1>{siteTitle}</h1>\n    <h2>{subtitle}</h2>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  subtitle: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import Header from './Header';\n\nexport default Header;"],"sourceRoot":""}