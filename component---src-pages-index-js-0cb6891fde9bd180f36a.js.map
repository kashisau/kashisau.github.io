{"version":3,"sources":["webpack:///./src/components/Header/Header.js","webpack:///./src/components/Header/index.js","webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/layouts/FrontpageLayout/FrontpageLayout.js","webpack:///./src/layouts/FrontpageLayout/index.js","webpack:///./src/components/Seo/Seo.js","webpack:///./src/components/Seo/index.js"],"names":["Header","_ref","siteTitle","subtitle","react_default","a","createElement","className","propTypes","PropTypes","string","defaultProps","__webpack_require__","d","__webpack_exports__","query","IndexPage","homepageData","data","allPrismicHomePage","edges","node","title","body","FrontpageLayout","components_Header","text","dangerouslySetInnerHTML","__html","html","Seo","keywords","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","render","children","Error","object","isRequired","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","articleRef","createRef","shadow","mouseEvent","article","current","window","matchMedia","matches","style","boxShadow","transform","x","clientX","y","clientY","articleRect","getBoundingClientRect","top","right","bottom","left","width","height","deltaX","deltaY","ratioX","Math","round","ratioY","boxShadowString","rotateXString","rotateYString","addEventListener","gatsby_browser_entry","onMouseMove","ref","_2994927498","description","lang","meta","detailsQuery","metaDescription","site","siteMetadata","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_1691925375","array","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-0cb6891fde9bd180f36a.js","sourcesContent":["import PropTypes from 'prop-types'\nimport React from 'react'\n\nimport './header.css'\n\nconst Header = ({ siteTitle, subtitle }) => (\n  <header className=\"Header\">\n    <h1>{siteTitle}</h1>\n    <h2>{subtitle}</h2>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n  subtitle: PropTypes.string\n}\n\nHeader.defaultProps = {\n  siteTitle: '',\n}\n\nexport default Header\n","import Header from './Header';\n\nexport default Header;","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Header from '../components/Header'\nimport FrontpageLayout from '../layouts/FrontpageLayout'\nimport Seo from '../components/Seo'\n\nconst IndexPage = ({data}) => {\n  const homepageData = data.allPrismicHomePage.edges[0].node.data;\n  const { title, subtitle, body } = homepageData;\n\n  return (<FrontpageLayout>\n    <Header siteTitle={title.text} subtitle={subtitle.text} />\n    <section className=\"MainBody\" dangerouslySetInnerHTML={{ __html: body.html}} />\n    <Seo title=\"Home\" keywords={['gatsby', 'application', 'react']} />\n  </FrontpageLayout>)\n}\n\nexport const query = graphql`\n  query HomePageQuery {\n    allPrismicHomePage {\n      edges {\n        node {\n          id\n          first_publication_date\n          last_publication_date\n          data {\n            title {\n              text\n            }\n            subtitle {\n              text\n            }\n            body {\n              html\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport './frontpage-layout.css'\n\nconst FrontpageLayout = ({ children }) => {\n  const articleRef = React.createRef();\n  const shadow = mouseEvent => {\n    const article = articleRef.current;\n\n    const mediaQueryMatches = window.matchMedia('screen and (min-width: 768px)');\n    if ( ! mediaQueryMatches.matches) {\n      article.style.boxShadow = \"\";\n      article.style.transform = \"\";\n      return;\n    }\n\n    const { clientX: x, clientY: y } = mouseEvent;\n    if (!x || !y) return;\n\n    const articleRect = article.getBoundingClientRect()\n    const { top, right, bottom, left } = articleRect;\n\n    const width = right - left;\n    const height = bottom - top;\n\n    const centreX = (left + right) / 2;\n    const centreY = (top + bottom) / 2;\n    const deltaX = x - centreX;\n    const deltaY = y - centreY;\n\n    const ratioX = Math.round(deltaX / (width/2) * 100) / 100;\n    const ratioY = Math.round(deltaY / (height/2) * 100) / 100;\n\n    const shadowX = ratioX*20;\n    const shadowY = ratioY*20;\n    const boxShadowString = `${-shadowX}px ${-shadowY}px 60px rgba(0,0,0,0.5)`;\n    article.style.boxShadow = boxShadowString;\n\n    const rotateX = ratioX * 2;\n    const rotateY = ratioY * 2;\n    const rotateXString = `rotateX(${-rotateX}deg)`;\n    const rotateYString = `rotateY(${-rotateY}deg)`;\n    article.style.transform = `${rotateXString} ${rotateYString}`;\n  }\n\n  window.addEventListener('resize', shadow);\n\n  return (\n    <StaticQuery\n      query={graphql`\n        query SiteTitleQuery {\n          site {\n            siteMetadata {\n              title\n            }\n          }\n        }\n      `}\n      render={data => (\n          <article className=\"PageMain\" onMouseMove={shadow} ref={articleRef}>\n          {children}\n          </article>\n      )}\n    />\n  )\n}\n\nFrontpageLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default FrontpageLayout\n","import FrontpageLayout from './FrontpageLayout';\n\nexport default FrontpageLayout;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction Seo({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSeo.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n\nconst detailsQuery = graphql`\n  query DefaultSeoQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import Seo from './Seo';\n\nexport default Seo;"],"sourceRoot":""}